{
	"info": {
		"_postman_id": "185f7c1b-5531-42b2-8799-8d34538da804",
		"name": "VAmPI",
		"description": "OpenAPI v3 specs for VAmPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User Generic",
			"item": [
				{
					"name": "Register new user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"email\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/v1/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"v1",
								"register"
							]
						},
						"description": "Register new user"
					},
					"response": [
						{
							"name": "Sucessfully created user",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"email\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/v1/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"v1",
										"register"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"exercitation dolor aliqua\",\n \"status\": \"fail\"\n}"
						},
						{
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"email\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/v1/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"v1",
										"register"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Login to VAmPI",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const body = pm.response.stream.toString('utf-8');",
									"const responseAsJson = JSON.parse(body)",
									"pm.collectionVariables.set(\"auth_token\", responseAsJson.auth_token)"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/v1/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"v1",
								"login"
							]
						},
						"description": "Login to VAmPI"
					},
					"response": [
						{
							"name": "Sucessfully logged in user",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/v1/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"v1",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"auth_token\": \"Lorem dolor\",\n \"message\": \"proident officia Duis cupidatat sint\",\n \"status\": \"fail\"\n}"
						},
						{
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"username\": \"<string>\",\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/v1/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"v1",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"status\": \"fail\",\n \"message\": \"ipsum non et ea\"\n}"
						}
					]
				},
				{
					"name": "Retrieves all users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/v1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"v1"
							]
						},
						"description": "Displays all users with basic information"
					},
					"response": [
						{
							"name": "See basic info about all users",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/v1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"v1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"email\": \"dolore\",\n  \"username\": \"labore tempor ea Duis\"\n },\n {\n  \"email\": \"aliqua\",\n  \"username\": \"Excepte\"\n }\n]"
						}
					]
				},
				{
					"name": "Retrieves all details for all users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/v1/_debug",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"v1",
								"_debug"
							]
						},
						"description": "Displays all details for all users - debug endpoint!"
					},
					"response": [
						{
							"name": "See all details of the users",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/v1/_debug",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"v1",
										"_debug"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"admin\": false,\n  \"email\": \"nostrud non commodo pariatur\",\n  \"password\": \"officia in adipisicing ad\",\n  \"username\": \"amet nostrud laborum do dolor\"\n },\n {\n  \"admin\": false,\n  \"email\": \"dolor\",\n  \"password\": \"sunt\",\n  \"username\": \"mollit\"\n }\n]"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "User Specific",
			"item": [
				{
					"name": "Retrieves user by username",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/v1/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"v1",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "<string>",
									"description": "(Required) retrieve username data"
								}
							]
						},
						"description": "Displays user by username"
					},
					"response": [
						{
							"name": "Successfully display user info",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/v1/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"v1",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"username\": \"eu in deserunt ullamco sint\",\n  \"email\": \"Duis do occaecat aute\"\n },\n {\n  \"username\": \"sit esse\",\n  \"email\": \"consequat\"\n }\n]"
						},
						{
							"name": "User not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/v1/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"v1",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"status\": \"fail\",\n \"message\": \"ipsum non et ea\"\n}"
						}
					]
				},
				{
					"name": "Deletes user by username (Only Admins)",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users/v1/:username",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"v1",
								":username"
							],
							"variable": [
								{
									"key": "username",
									"value": "<string>",
									"description": "(Required) Delete username"
								}
							]
						},
						"description": "Deletes user by username (Only Admins)"
					},
					"response": [
						{
							"name": "Sucessfully deleted user",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/v1/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"v1",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"exercitation dolor aliqua\",\n \"status\": \"fail\"\n}"
						},
						{
							"name": "User not authorized",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/v1/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"v1",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"status\": \"fail\",\n \"message\": \"ipsum non et ea\"\n}"
						},
						{
							"name": "User not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/v1/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"v1",
										":username"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update users email (Requires Auth)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/v1/:username/email",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"v1",
								":username",
								"email"
							],
							"variable": [
								{
									"key": "username",
									"value": "<string>",
									"description": "(Required) username to update email"
								}
							]
						},
						"description": "Update a single users email"
					},
					"response": [
						{
							"name": "User not authorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/v1/:username/email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"v1",
										":username",
										"email"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"status\": \"fail\",\n \"message\": \"ipsum non et ea\"\n}"
						},
						{
							"name": "Invalid request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/v1/:username/email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"v1",
										":username",
										"email"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Sucessfully updated user email",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/v1/:username/email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"v1",
										":username",
										"email"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update users password (Requires Auth)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/users/v1/:username/password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"v1",
								":username",
								"password"
							],
							"variable": [
								{
									"key": "username",
									"value": "<string>",
									"description": "(Required) username to update password"
								}
							]
						},
						"description": "Update users password"
					},
					"response": [
						{
							"name": "User not authorized",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/v1/:username/password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"v1",
										":username",
										"password"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"status\": \"fail\",\n \"message\": \"ipsum non et ea\"\n}"
						},
						{
							"name": "Sucessfully updated users password",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/v1/:username/password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"v1",
										":username",
										"password"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Invalid request",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"password\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/users/v1/:username/password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										"v1",
										":username",
										"password"
									],
									"variable": [
										{
											"key": "username"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Books Related",
			"item": [
				{
					"name": "Retrieves all books",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/books/v1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"books",
								"v1"
							]
						},
						"description": "Retrieves all books"
					},
					"response": [
						{
							"name": "See all books",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/books/v1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"books",
										"v1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"Books\": [\n  {\n   \"book_title\": \"Duis exercitation Ut\",\n   \"user\": \"occaecat\"\n  },\n  {\n   \"book_title\": \"eu Duis\",\n   \"user\": \"Excepteur tempor\"\n  }\n ]\n}"
						}
					]
				},
				{
					"name": "Add new book (Requires Auth)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"book_title\": \"<string>\",\n    \"secret\": \"<string>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/books/v1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"books",
								"v1"
							]
						},
						"description": "Add new book"
					},
					"response": [
						{
							"name": "User not authorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"book_title\": \"<string>\",\n    \"secret\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/books/v1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"books",
										"v1"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"status\": \"fail\",\n \"message\": \"ipsum non et ea\"\n}"
						},
						{
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"book_title\": \"<string>\",\n    \"secret\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/books/v1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"books",
										"v1"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Sucessfully added a book",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"book_title\": \"<string>\",\n    \"secret\": \"<string>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/books/v1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"books",
										"v1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"message\": \"exercitation dolor aliqua\",\n \"status\": \"fail\"\n}"
						}
					]
				},
				{
					"name": "Retrieves book by title along with secret (Requires Auth)",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/books/v1/:book_title",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"books",
								"v1",
								":book_title"
							],
							"variable": [
								{
									"key": "book_title",
									"value": "<string>",
									"description": "(Required) retrieve book data"
								}
							]
						},
						"description": "Retrieves book by title along with secret. Only the owner may retrieve it"
					},
					"response": [
						{
							"name": "User not authorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/books/v1/:book_title",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"books",
										"v1",
										":book_title"
									],
									"variable": [
										{
											"key": "book_title"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"status\": \"fail\",\n \"message\": \"ipsum non et ea\"\n}"
						},
						{
							"name": "Book not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/books/v1/:book_title",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"books",
										"v1",
										":book_title"
									],
									"variable": [
										{
											"key": "book_title"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"status\": \"fail\",\n \"message\": \"ipsum non et ea\"\n}"
						},
						{
							"name": "Successfully retrieve book info",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/books/v1/:book_title",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"books",
										"v1",
										":book_title"
									],
									"variable": [
										{
											"key": "book_title"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"book_title\": \"qui proident adipisicing\",\n  \"owner\": \"in c\",\n  \"secret\": \"dolor eu magna\"\n },\n {\n  \"book_title\": \"cupidatat aute magna pariatur\",\n  \"owner\": \"nisi Ut pariatur id\",\n  \"secret\": \"nostrud eu velit\"\n }\n]"
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "VAmPI home",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						""
					]
				},
				"description": "VAmPI is a vulnerable on purpose API. It was created in order to evaluate the efficiency of third party tools in identifying vulnerabilities in APIs but it can also be used in learning/teaching purposes."
			},
			"response": [
				{
					"name": "Home - Help",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								""
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"message\": \"irure magna incididunt dolore\",\n \"Help\": \"irure consequat\"\n}"
				}
			]
		},
		{
			"name": "Creates and populates the database with dummy data",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/createdb",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"createdb"
					]
				},
				"description": "Creates and populates the database with dummy data"
			},
			"response": [
				{
					"name": "Creates and populates the database with dummy data",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/createdb",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"createdb"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"body": "{\n \"message\": \"ex esse non sit\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5000"
		},
		{
			"key": "auth_token",
			"value": ""
		}
	]
}